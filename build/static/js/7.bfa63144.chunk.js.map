{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/@coreui/icons/js/free/cil-people.js","pages/reports/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","cilPeople","Reports","className","align","hover","responsive","color","icon","map","item","index","size","src","avatar","status","user","name","new","registered","country","flag","title","usage","value","period","thin","payment","activity"],"mappings":";+JAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,iCCPD,kCAAO,MAAMqB,EAAY,CAAC,UAAU,++B,iCCCpC,2GA+HeC,UAvEC,IAMR,mCACI,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACI,cAAC,IAAD,yBAGA,cAAC,IAAD,UACI,cAAC,KAAD,UACI,eAAC,KAAD,CAAQC,MAAM,SAASD,UAAU,cAAcE,OAAK,EAACC,YAAU,EAA/D,UACI,cAAC,KAAD,CAAYC,MAAM,QAAlB,SACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAkBJ,UAAU,cAA5B,SACI,cAAC,IAAD,CAAOK,KAAMP,QAEjB,cAAC,KAAD,mBACA,cAAC,KAAD,CAAkBE,UAAU,cAA5B,qBACA,cAAC,KAAD,oBACA,cAAC,KAAD,CAAkBA,UAAU,cAA5B,4BACA,cAAC,KAAD,4BAGR,cAAC,KAAD,UAzBH,GA0BqBM,KAAI,CAACC,EAAMC,IACrB,eAAC,KAAD,CAAW,QAAM,qBAAjB,UACI,cAAC,KAAD,CAAgBR,UAAU,cAA1B,SACI,cAAC,IAAD,CAASS,KAAK,KAAKC,IAAKH,EAAKI,OAAOD,IAAKE,OAAQL,EAAKI,OAAOC,WAEjE,eAAC,KAAD,WACI,8BAAML,EAAKM,KAAKC,OAChB,sBAAKd,UAAU,6BAAf,UACI,+BAAOO,EAAKM,KAAKE,IAAM,MAAQ,cADnC,iBACqE,IAChER,EAAKM,KAAKG,iBAGnB,cAAC,KAAD,CAAgBhB,UAAU,cAA1B,SACI,cAAC,IAAD,CAAOS,KAAK,KAAKJ,KAAME,EAAKU,QAAQC,KAAMC,MAAOZ,EAAKU,QAAQH,SAElE,eAAC,KAAD,WACI,sBAAKd,UAAU,WAAf,UACI,qBAAKA,UAAU,cAAf,SACI,mCAASO,EAAKa,MAAMC,MAApB,SAEJ,qBAAKrB,UAAU,YAAf,SACI,uBAAOA,UAAU,uBAAjB,SAAyCO,EAAKa,MAAME,cAG5D,cAAC,KAAD,CAAWC,MAAI,EAACnB,MAAOG,EAAKa,MAAMhB,MAAOiB,MAAOd,EAAKa,MAAMC,WAE/D,cAAC,KAAD,CAAgBrB,UAAU,cAA1B,SACI,cAAC,IAAD,CAAOS,KAAK,KAAKJ,KAAME,EAAKiB,QAAQnB,SAExC,eAAC,KAAD,WACI,qBAAKL,UAAU,6BAAf,wBACA,iCAASO,EAAKkB,gBA9BqBjB","file":"static/js/7.bfa63144.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export const cilPeople = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"]","import PropTypes from 'prop-types'\r\nimport React, { useEffect, useState, createRef } from 'react'\r\nimport classNames from 'classnames'\r\n// import { CRow, CCol, CCard, CCardHeader, CCardBody } from '@coreui/react'\r\nimport { rgbToHex } from '@coreui/utils'\r\nimport { DocsLink } from 'src/components'\r\n\r\nimport {\r\n    CAvatar,\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CProgress,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n    cibCcAmex,\r\n    cibCcApplePay,\r\n    cibCcMastercard,\r\n    cibCcPaypal,\r\n    cibCcStripe,\r\n    cibCcVisa,\r\n    cibGoogle,\r\n    cibFacebook,\r\n    cibLinkedin,\r\n    cifBr,\r\n    cifEs,\r\n    cifFr,\r\n    cifIn,\r\n    cifPl,\r\n    cifUs,\r\n    cibTwitter,\r\n    cilCloudDownload,\r\n    cilPeople,\r\n    cilUser,\r\n    cilUserFemale,\r\n} from '@coreui/icons'\r\n\r\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\r\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\r\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\r\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\r\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\r\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\r\n\r\nconst Reports = () => {\r\n    const tableExample = [\r\n       \r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <CCard className=\"mb-4\">\r\n                <CCardHeader>\r\n                   My Reports\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CRow>\r\n                        <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                            <CTableHead color=\"light\">\r\n                                <CTableRow>\r\n                                    <CTableHeaderCell className=\"text-center\">\r\n                                        <CIcon icon={cilPeople} />\r\n                                    </CTableHeaderCell>\r\n                                    <CTableHeaderCell>User</CTableHeaderCell>\r\n                                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Usage</CTableHeaderCell>\r\n                                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Activity</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                {tableExample.map((item, index) => (\r\n                                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                                        <CTableDataCell className=\"text-center\">\r\n                                            <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                                        </CTableDataCell>\r\n                                        <CTableDataCell>\r\n                                            <div>{item.user.name}</div>\r\n                                            <div className=\"small text-medium-emphasis\">\r\n                                                <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\r\n                                                {item.user.registered}\r\n                                            </div>\r\n                                        </CTableDataCell>\r\n                                        <CTableDataCell className=\"text-center\">\r\n                                            <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\r\n                                        </CTableDataCell>\r\n                                        <CTableDataCell>\r\n                                            <div className=\"clearfix\">\r\n                                                <div className=\"float-start\">\r\n                                                    <strong>{item.usage.value}%</strong>\r\n                                                </div>\r\n                                                <div className=\"float-end\">\r\n                                                    <small className=\"text-medium-emphasis\">{item.usage.period}</small>\r\n                                                </div>\r\n                                            </div>\r\n                                            <CProgress thin color={item.usage.color} value={item.usage.value} />\r\n                                        </CTableDataCell>\r\n                                        <CTableDataCell className=\"text-center\">\r\n                                            <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                                        </CTableDataCell>\r\n                                        <CTableDataCell>\r\n                                            <div className=\"small text-medium-emphasis\">Last login</div>\r\n                                            <strong>{item.activity}</strong>\r\n                                        </CTableDataCell>\r\n                                    </CTableRow>\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n"],"sourceRoot":""}