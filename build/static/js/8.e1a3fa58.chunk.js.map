{"version":3,"sources":["global/constants.js","redux/action/loginAction.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","views/pages/login/Login.js"],"names":["loginAction","data","onSuccess","async","axios","post","then","response","dispatch","type","catch","err","console","log","logoutAction","cilLockLocked","connect","state","login","props","textInput","React","useRef","passInput","userId","setUserName","useState","password","setPassword","className","md","icon","cilUser","placeholder","autoComplete","ref","onChange","current","value","xs","color","onClick","history","push","style","width","to","active","tabIndex"],"mappings":"sQAAO,MCGMA,EAAc,CAACC,EAAKC,IACtBC,gBAEGC,IAAMC,KAAN,UDNU,wBCMV,UAAgCJ,GAAMK,MAAMC,IAE9CC,EAAS,CACDC,KAAM,gBACNR,KAAKM,EAASN,OAItBC,EAAUK,MACXG,OAAOC,IACNC,QAAQC,IAAI,MAAOF,EAAIJ,UACvBC,EAAS,CACLC,KAAM,cACNR,KAAKU,QASRG,EAAgBZ,GAClBC,UACXS,QAAQC,IAAI,MACJL,EAAS,CAEDC,KAAM,iBACNR,KAAK,KAKbC,M,iCCvCR,kCAAO,MAAMa,EAAgB,CAAC,UAAU,+Q,iCCAxC,wHAoIeC,uBAVUC,IAChB,CAAEA,YAEgBT,IAElB,CAAEU,MAAO,CAACjB,EAAMC,KAAgBM,EAASR,YAAYC,EAAMC,QAKrDc,EA1GAG,IACb,MAAMC,EAAYC,IAAMC,OAAO,MACzBC,EAAYF,IAAMC,OAAO,OAExBE,EAAQC,GAAeJ,IAAMK,SAAS,KACtCC,EAAUC,GAAeP,IAAMK,SAAS,IAmB/C,OACE,qBAAKG,UAAU,yDAAf,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,uCACA,mBAAGA,UAAU,uBAAb,qCACA,eAAC,KAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAOE,KAAMC,QAEf,cAAC,IAAD,CAAYC,YAAY,WAAWC,aAAa,WAAWC,IAAKf,EAAWgB,SAAU,IAAMX,EAAYL,EAAUiB,QAAQC,YAE3H,eAAC,KAAD,CAAaT,UAAU,OAAvB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAOE,KAAMhB,QAEf,cAAC,IAAD,CACEN,KAAK,WACLwB,YAAY,WACZC,aAAa,mBACbC,IAAKZ,EACLa,SAAU,IAAMR,EAAYL,EAAUc,QAAQC,YAGlD,eAAC,KAAD,WACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,cAAC,IAAD,CAASC,MAAM,UAAUX,UAAU,OAAOY,QAtC/CtC,UAEfgB,EAAMuB,QAAQC,KAAK,eAoCC,qBAWF,cAAC,IAAD,CAAMJ,GAAI,EAAGV,UAAU,yBAS/B,cAAC,IAAD,CAAOA,UAAU,6BAA6Be,MAAO,CAAEC,MAAO,OAA9D,SACE,cAAC,IAAD,CAAWhB,UAAU,cAArB,SACE,gCACE,yCAEA,cAAC,IAAD,CAAMiB,GAAG,YAAT,SACE,cAAC,IAAD,CAASN,MAAM,UAAUX,UAAU,OAAOkB,QAAM,EAACC,UAAW,EAA5D","file":"static/js/8.e1a3fa58.chunk.js","sourcesContent":["export const BASE_URL = 'http://localhost:4000'","import axios from \"axios\"\r\nimport { BASE_URL } from \"src/global/constants\";\r\n\r\nexport const loginAction = (data,onSuccess) => {\r\n    return async (dispatch) => {\r\n\r\n        await axios.post(`${BASE_URL}/login`, data).then((response) => {\r\n\r\n            dispatch({\r\n                    type: 'LOGIN_SUCCESS',\r\n                    data:response.data,\r\n\r\n                }\r\n            )\r\n            onSuccess(response)\r\n        }).catch((err) => {\r\n            console.log('err', err.response)\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                data:err\r\n            }\r\n        )\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logoutAction = (onSuccess) => {\r\n    return async (dispatch) => {\r\nconsole.log('hi')\r\n        dispatch({\r\n\r\n                type: 'LOGOUT_SUCCESS',\r\n                data:[],\r\n\r\n            }\r\n        )\r\n        \r\n        onSuccess()\r\n    }\r\n\r\n}","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginAction } from '../../../redux/action/loginAction'\nimport { bindActionCreators } from 'redux'\nimport authGuard from 'src/authGuard'\nimport Loader from 'react-loader-spinner'\n// prettier-ignore\n/* eslint react/prop-types: 0 */\n\nconst Login = (props) => {\n  const textInput = React.useRef(null);\n  const passInput = React.useRef(null)\n\n  const [userId, setUserName] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const navigate = () => {\n    props.history.push(\"/dashboard\")\n\n  }\n\n  const onSuccess = (response) => {\n    console.log('callback', response)\n    authGuard.login(() => {\n      props.history.push(\"/dashboard\")\n\n    })\n  }\n  const onSubmit = async () => {\n    const requestData = { email: userId, password }\n    props.history.push(\"/dashboard\")\n    // await props.login(requestData, onSuccess)\n\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n              \n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"Username\" autoComplete=\"username\" ref={textInput} onChange={() => setUserName(textInput.current.value)} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        ref={passInput}\n                        onChange={() => setPassword(passInput.current.value)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={onSubmit}>\n                          Login\n                        </CButton>\n                        {/* <Loader\n    type=\"Oval\"\n    color=\"#00BFFF\"\n    height={20}\n    width={20}\n    timeout={3000} //3 secs\n  /> */}\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        {/* <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton> */}\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return { state }\n}\nconst mapDispatchToProps = dispatch => {\n\n  return { login: (data, onSuccess) => { dispatch(loginAction(data, onSuccess)) } }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"sourceRoot":""}