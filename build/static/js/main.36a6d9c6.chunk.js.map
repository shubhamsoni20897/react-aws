{"version":3,"sources":["assets/images/avatars/1.jpg","assets/images/avatars/2.jpg","assets/images/avatars/3.jpg","assets/images/avatars/4.jpg","assets/images/avatars/5.jpg","assets/images/avatars/6.jpg","pages/charts/chart.js","views/dashboard/Dashboard.js","authGuard.js","protectedRoutes.js","App.js","serviceWorker.js","redux/reducer/loginReducer.js","redux/reducer/sideBarReducer.js","redux/store/store.js","index.js"],"names":["Chart","props","style","height","marginTop","data","labels","label","datasets","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","DashboardComp","lazy","Dashboard","diseaseList","setDiseases","React","useState","stateWiseGraph","setStateWiseData","graphLabel","setGraphLabel","graphData","setGraphData","pieGraphLabel","setPieGraphLabel","pieGraphData","setPieGraphData","response","setResponse","categoryName","setCategoryName","loader","setLoader","useEffect","async","getDiseases","getStateWiseData","_id","diseaseName","axios","get","then","res","console","log","catch","err","stateGraph","map","value","push","count","labelPie","dataPie","ageGraph","calcPercentage","partialValue","totalValue","parseFloat","toFixed","progressExample","title","recoveredCases","percent","totalCases","color","deathCases","activeCases","progressGroupExample2","icon","cilUser","malePercentage","cilUserFemale","femalePercentage","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","avatar1","cifUs","cibCcMastercard","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","justifyContent","alignItems","type","width","timeout","handleClick","className","sm","id","xs","cols","md","item","index","thin","xl","hoverBackgroundColor","size","constructor","this","authenticated","login","cb","logout","isAuthenticated","ProtectedRoute","component","Component","rest","isLoggedIn","useSelector","state","loginReducer","render","to","pathname","from","location","loading","DefaultLayout","Login","Page404","Page500","App","Suspense","fallback","exact","path","name","Boolean","window","hostname","match","initialState","loginData","sidebarShow","store","createStore","combineReducers","action","changeState","applyMiddleware","thunk","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36a6d9c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.34eedf58.jpg\";","export default __webpack_public_path__ + \"static/media/2.0c06e43d.jpg\";","export default __webpack_public_path__ + \"static/media/3.07e357f5.jpg\";","export default __webpack_public_path__ + \"static/media/4.3ddf28ab.jpg\";","export default __webpack_public_path__ + \"static/media/5.3e55ee5f.jpg\";","export default __webpack_public_path__ + \"static/media/6.edefb235.jpg\";","import React, { lazy, useEffect } from 'react'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n/* eslint react/prop-types: 0 */\r\n\r\nexport const Chart = (props)=>{\r\nreturn (\r\n    <CChartLine\r\n            style={{ height: '300px', marginTop: '40px' }}\r\n            data={{\r\n              labels:props.label,\r\n              datasets: [\r\n                {\r\n                  label: 'My First dataset',\r\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\r\n                  borderColor: getStyle('--cui-info'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\r\n                  borderWidth: 2,\r\n                  data: props.data,\r\n                  fill: true,\r\n                },\r\n               \r\n              ],\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false,\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  grid: {\r\n                    drawOnChartArea: false,\r\n                  },\r\n                },\r\n                y: {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 5,\r\n                    stepSize: Math.ceil(250 / 5),\r\n                    max: 250,\r\n                  },\r\n                },\r\n              },\r\n              elements: {\r\n                line: {\r\n                  tension: 0.4,\r\n                },\r\n                point: {\r\n                  radius: 0,\r\n                  hitRadius: 10,\r\n                  hoverRadius: 4,\r\n                  hoverBorderWidth: 3,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n)\r\n}","import React, { lazy, useEffect } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine, CChartPie } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\nimport axios from 'axios'\nimport { Chart } from 'src/pages/charts/chart'\nimport Loader from 'react-loader-spinner'\n\nconst DashboardComp = lazy(() => import('../../pages/dashboard/index'))\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  const [diseaseList, setDiseases] = React.useState([])\n  const [stateWiseGraph, setStateWiseData] = React.useState([])\n  const [graphLabel, setGraphLabel] = React.useState([])\n  const [graphData, setGraphData] = React.useState([])\n  const [pieGraphLabel, setPieGraphLabel] = React.useState([])\n  const [pieGraphData, setPieGraphData] = React.useState([])\n  const [response, setResponse] = React.useState()\n  const [categoryName, setCategoryName] = React.useState('')\n  const [loader, setLoader] = React.useState(false)\n\n  React.useEffect(async () => {\n    await getDiseases();\n    await getStateWiseData({_id:'61bafa7258f70f5bac158158',diseaseName:'Heart Attack'});\n  }, [])\nReact.useEffect(()=>{},[categoryName])\n  const handleClick = (data) => {\n    getStateWiseData(data)\n    console.log('data', data)\n    // setCategoryName(data.diseaseName)\n  }\n\n  const getDiseases = () => {\n    axios.get('http://localhost:4000/getDisease').then((res) => {\n      console.log(res.data)\n      \n      setDiseases(res.data)\n    }).catch((err) => {\n      console.log('err', err.response)\n    })\n  }\n\n  const getStateWiseData = (data) => {\n    setCategoryName(data.diseaseName)\nsetLoader(true)\n    axios.get(`http://localhost:4000/getStateWiseData/${data._id}`).then((res) => {\n      console.log(res.data.data)\n      setResponse(res.data.data)\n      const label = []\n      const data = []\n      setLoader(false)\n\n      res.data.data.stateGraph?.map((value) => {\n        label.push(value._id)\n        data.push(value.count)\n\n      })\n      const labelPie = []\n      const dataPie = []\n      res.data.data.ageGraph?.map((value) => {\n        labelPie.push(value._id)\n        dataPie.push(value.count)\n\n      })\n      setGraphLabel(label)\n      setGraphData(data)\n      setPieGraphLabel(labelPie)\n      setPieGraphData(dataPie)\n      setStateWiseData(res.data)\n    }).catch((err) => {\n      setLoader(false)\n\n      console.log('err', err)\n    })\n  }\n  const calcPercentage = (partialValue, totalValue) => {\n    return parseFloat((partialValue / totalValue) * 100).toFixed(2)\n  }\n  const progressExample = [\n    { title: 'Recovery Rate', value: response?.recoveredCases, percent: calcPercentage(response?.recoveredCases, response?.totalCases), color: 'success' },\n    { title: 'Death Rate', value: response?.deathCases, percent: calcPercentage(response?.deathCases, response?.totalCases), color: 'info' },\n    { title: 'Active Cases', value: response?.activeCases, percent: calcPercentage(response?.activeCases, response?.totalCases), color: 'warning' },\n    // { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    // { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, percent: response?.malePercentage },\n    { title: 'Female', icon: cilUserFemale, percent: response?.femalePercentage },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return   loader?(\n  <>    <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'100%'}}><Loader\n    type=\"Oval\"\n    color=\"#00BFFF\"\n    height={100}\n    width={100}\n    timeout={3000} //3 secs\n  /></div></>\n  ):(\n    <>\n      {/* <WidgetsDropdown diseaseName={diseaseList} /> */}\n      <DashboardComp diseaseName={diseaseList} handleClick={handleClick} />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n            {categoryName}\n              </h4>\n            </CCol>\n\n            <Chart label={graphLabel} data={graphData} />\n\n          </CRow>\n\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 3 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            {/* <CCardHeader>Traffic {' & '} Sales</CCardHeader> */}\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  {/* <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow> */}\n\n                  {/* <CCol xs={6}> */}\n                  <CCard className=\"mb-4\">\n                    <CCardHeader>Age Wise Report</CCardHeader>\n                    <CCardBody>\n                      <CChartPie\n                        data={{\n                          labels: pieGraphLabel,\n                          datasets: [\n                            {\n                              data: pieGraphData,\n                              backgroundColor: ['#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'],\n                              hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                            },\n                          ],\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                {/* </CCol> */}\n\n                <CCol xs={12} md={6} xl={6}>\n                  {/* <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow> */}\n\n                  <CCard className=\"mb-4\">\n                    <CCardHeader></CCardHeader>\n                    <CCardBody>\n\n                      {progressGroupExample2.map((item, index) => (\n                        <div className=\"progress-group\" key={index}>\n                          <div className=\"progress-group-header\">\n                            <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                            <span>{item.title}</span>\n                            <span className=\"ms-auto fw-semibold\">\n                              {item.value}{' '}\n                              <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                            </span>\n                          </div>\n                          <div className=\"progress-group-bars\">\n                            <CProgress thin color=\"success\" value={item.percent} />\n                          </div>\n                        </div>\n                      ))}\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n\n              <br />\n\n              {/* <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable> */}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","class Auth {\r\n  constructor(){\r\n    this.authenticated = false;\r\n  }\r\n  login(cb){\r\n    this.authenticated = true;\r\n    cb()\r\n  }\r\n  logout(cb){\r\n    this.authenticated = false;\r\n    cb()\r\n  }\r\n  isAuthenticated(){\r\n    return this.authenticated\r\n  }\r\n}\r\nexport default new Auth","import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport  Auth from './authGuard'\r\n/* eslint react/prop-types: 0 */\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const {isLoggedIn} =useSelector((state) => state.loginReducer)\r\n\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isLoggedIn) {\r\nconsole.log('Yes')\r\n                    return <Component {...props} render={rest.render} />\r\n                } else {\r\nconsole.log('No')\r\n\r\n                    return <Redirect to=\r\n                        {{\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                }\r\n            }\r\n        }\r\n        />\r\n    )\r\n}","import React, { Component } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport './scss/style.scss'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport {ProtectedRoute} from './protectedRoutes'\nimport Dashboard from './views/dashboard/Dashboard'\n/* eslint react/prop-types: 0 */\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./layout/DefaultLayout'))\n\n// Pages\nconst Login = React.lazy(() => import('./views/pages/login/Login'))\nconst Register = React.lazy(() => import('./views/pages/register/Register'))\nconst Page404 = React.lazy(() => import('./views/pages/page404/Page404'))\nconst Page500 = React.lazy(() => import('./views/pages/page500/Page500'))\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <React.Suspense fallback={loading}>\n          <Switch>\n            <Route exact path=\"/\" name=\"Login Page\" render={(props) => <Login {...props} />} />\n            <Route\n              exact\n              path=\"/dashboard\"\n              name=\"Register Page\"\n              render={(props) => <Dashboard {...props} />}\n            />\n            <Route exact path=\"/404\" name=\"Page 404\" render={(props) => <Page404 {...props} />} />\n            <Route exact path=\"/500\" name=\"Page 500\" render={(props) => <Page500 {...props} />} />\n            <ProtectedRoute path=\"/dashboard\" name=\"Home\"component={DefaultLayout} />\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","const initialState = {\r\n    isLoggedIn: false,\r\n    loginData:[]\r\n  }\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    console.log('action',action)\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            return { ...state, loginData: action.data,isLoggedIn:true }\r\n        case 'LOGIN_ERROR':\r\n            return { ...state }\r\n            case 'LOGOUT_SUCCESS':\r\n                return { ...state, loginData: action.data,isLoggedIn:false }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    sidebarShow: true,\r\n  }\r\n  \r\n  export const changeState = (state = initialState, { type, ...rest }) => {\r\n    switch (type) {\r\n      case 'set':\r\n        return { ...state, ...rest }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { loginReducer } from \"../reducer/loginReducer\";\r\nimport { changeState } from \"../reducer/sideBarReducer\";\r\n\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nexport const store = createStore(combineReducers({\r\n    loginReducer,changeState\r\n}),applyMiddleware(thunk,logger))\r\n\r\n\r\n","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store/store'\n// import store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}